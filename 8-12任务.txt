上周的要求
1、建立学生、科目、成绩表三个有关联关系表，要求必须用CodeFirst方式生成
2、能够通过学生的ID或者学号查询出来 对应的科目及成绩，完成基本的CURD(增删改查操作)
3、查看demo里面的cookie验证，消化理解后，在2的基础上实现，学生的登录，学生有班长、学生两个身份。班长进去能够看到全班所有学生的科目及成绩信息。而学生只能看到自己的。
要充分理解cookie验证的原理，让角色发挥作用，而避免使用针对用户的ID这种个人信息来控制的做法


第二点看到是用VS自带的方式生成的CURD操作，我就没说了，按道理应该自己实现。

###################
8-12追加

要理解第二点，既然有CURD操作，可以在功能上增删改查，为什么还要进数据库操作？ 原来系统的CURD现在也看不到了。这个已经不讲了

要理解第3点，学生的数据库存在，就不可能有登录的时候，手动在代码增加的用户数据，来进行登录验证。

这从出发点上就能发现，这个任务的做法是不是符合最初的要求



8-12例子：

1、首先在appsettings.json文件中，将自己本地的数据库用户名，密码配置正确
2、打开程序包管理器控制台，执行CodeFirst生成数据库及表命令：
3、依次执行  add-migration init -context localcontext 
                     update-database init -context localcontext
4、运行项目，访问localhost:5000/init，执行初始数据生成。
5、进入/login/登录页，自行测试demo


https://localhost:5001/Employee/SaveEditPlan?
title=%E8%AE%A1%E5%88%921%E7%9A%84%E6%A0%87%E9%A2%98&
stime=1&
etime=1&
pid=1&
text=%E8%AE%A1%E5%88%921%E7%9A%84%E5%86%85%E5%AE%B9